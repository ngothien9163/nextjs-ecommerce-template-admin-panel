import React from "react";
import { Form, Input, Select, Switch, Space, Tooltip } from "antd";
import {
  FileTextOutlined,
  EyeOutlined,
  EditOutlined,
  PictureOutlined,
  UserOutlined,
  CopyrightOutlined,
  InfoCircleOutlined,
} from "@ant-design/icons";
import { KeywordsInput } from "../keywords-input";
import { AISuggestions } from "../ai-suggestions";

const { TextArea } = Input;
const { Option } = Select;

// Preset data cho Credit v√† License
export const CREDIT_PRESETS = [
  // Free Sources
  "Unsplash",
  "Pexels", 
  "Pixabay",
  "Freepik",
  "Wikimedia Commons",
  "OpenClipart",
  "Flaticon",
  // Paid Sources
  "Adobe Stock",
  "Shutterstock",
  "Getty Images",
  "iStock",
  "Depositphotos",
  // Self Created
  "Original Content",
  "Self Created",
  "Custom Design",
  // Custom
  "Custom",
];

export const LICENSE_PRESETS = [
  { value: "CC0", label: "CC0 (Public Domain) - Mi·ªÅn c√¥ng c·ªông, t·ª± do s·ª≠ d·ª•ng" },
  { value: "CC BY", label: "CC BY (Attribution) - Ghi c√¥ng t√°c gi·∫£" },
  { value: "CC BY-SA", label: "CC BY-SA (Attribution-ShareAlike) - Ghi c√¥ng v√† chia s·∫ª t∆∞∆°ng t·ª±" },
  { value: "CC BY-ND", label: "CC BY-ND (Attribution-NoDerivs) - Ghi c√¥ng, kh√¥ng ch·ªânh s·ª≠a" },
  { value: "CC BY-NC", label: "CC BY-NC (Attribution-NonCommercial) - Ghi c√¥ng, kh√¥ng th∆∞∆°ng m·∫°i" },
  { value: "CC BY-NC-SA", label: "CC BY-NC-SA (Attribution-NonCommercial-ShareAlike) - Ghi c√¥ng, kh√¥ng th∆∞∆°ng m·∫°i, chia s·∫ª t∆∞∆°ng t·ª±" },
  { value: "CC BY-NC-ND", label: "CC BY-NC-ND (Attribution-NonCommercial-NoDerivs) - Ghi c√¥ng, kh√¥ng th∆∞∆°ng m·∫°i, kh√¥ng ch·ªânh s·ª≠a" },
  { value: "All Rights Reserved", label: "All Rights Reserved - B·∫£o l∆∞u m·ªçi quy·ªÅn" },
  { value: "Fair Use", label: "Fair Use - S·ª≠ d·ª•ng h·ª£p l√Ω" },
  { value: "Custom", label: "Custom - T√πy ch·ªânh" },
];

interface MediaFormFieldsProps {
  mode?: 'create' | 'edit';
  uploadedFiles?: Array<{
    file: File;
    preview: string;
    uploaded: boolean;
    url?: string;
    dimensions?: { width: number; height: number };
    fileSizeKB?: number;
    imageFormat?: string;
    uploadedFileName?: string;
    uploadedFilePath?: string;
  }>;
  selectedFileIndex?: number;
  form?: any; // Ant Design form instance
}

export const MediaFormFields: React.FC<MediaFormFieldsProps> = ({ 
  mode = 'create', 
  uploadedFiles = [],
  selectedFileIndex = 0,
  form
}) => {
  const selectedFile = uploadedFiles[selectedFileIndex];
  const hasUploadedFile = mode === 'create' && uploadedFiles.length > 0 && selectedFile?.uploaded;
  return (
    <>
      {/* File Upload Status */}
      {hasUploadedFile && (
        <div style={{ 
          marginBottom: '16px', 
          padding: '12px', 
          backgroundColor: '#f6ffed', 
          border: '1px solid #b7eb8f', 
          borderRadius: '6px',
          display: 'flex',
          alignItems: 'center',
          gap: '8px'
        }}>
          <span style={{ color: '#52c41a', fontSize: '16px' }}>‚úÖ</span>
          <div>
            <div style={{ fontWeight: 'bold', color: '#52c41a', marginBottom: '4px' }}>
              ƒê√£ c√≥ file n√†y
            </div>
            <div style={{ fontSize: '12px', color: '#666' }}>
              File: <strong>{selectedFile?.uploadedFileName || selectedFile?.file.name}</strong>
              {selectedFile?.dimensions && (
                <span> ‚Ä¢ K√≠ch th∆∞·ªõc: {selectedFile.dimensions.width}x{selectedFile.dimensions.height}</span>
              )}
              {selectedFile?.fileSizeKB && (
                <span> ‚Ä¢ Dung l∆∞·ª£ng: {selectedFile.fileSizeKB} KB</span>
              )}
            </div>
          </div>
        </div>
      )}

      {/* Basic Information */}
      <Form.Item
        label={
          <Space>
            <FileTextOutlined />
            T√™n file
            <Tooltip title="T√™n file g·ªëc, s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã trong admin panel">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
          </Space>
        }
        name="file_name"
        rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p t√™n file!" }]}
      >
        <Input placeholder="T√™n file g·ªëc" />
      </Form.Item>

      <Form.Item
        label={
          <Space>
            <EyeOutlined />
            Alt Text
            <Tooltip title="M√¥ t·∫£ h√¨nh ·∫£nh cho SEO v√† accessibility, r·∫•t quan tr·ªçng cho ng∆∞·ªùi d√πng khi·∫øm th·ªã">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
          </Space>
        }
        name="alt_text"
        rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p alt text!" }]}
      >
        <Input placeholder="M√¥ t·∫£ h√¨nh ·∫£nh cho SEO" />
      </Form.Item>

      <Form.Item
        label={
          <Space>
            <EditOutlined />
            Title
            <Tooltip title="Ti√™u ƒë·ªÅ hi·ªÉn th·ªã khi hover chu·ªôt l√™n h√¨nh ·∫£nh">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
          </Space>
        }
        name="title"
      >
        <Input placeholder="Ti√™u ƒë·ªÅ khi hover" />
      </Form.Item>

      <Form.Item
        label={
          <Space>
            <PictureOutlined />
            Caption
            <Tooltip title="Ch√∫ th√≠ch chi ti·∫øt v·ªÅ h√¨nh ·∫£nh, c√≥ th·ªÉ hi·ªÉn th·ªã d∆∞·ªõi h√¨nh ·∫£nh">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
          </Space>
        }
        name="caption"
      >
        <TextArea rows={3} placeholder="Ch√∫ th√≠ch h√¨nh ·∫£nh" />
      </Form.Item>

      {/* AI Suggestions */}
      {form && (
        <AISuggestions
          fileName={form.getFieldValue('file_name') || selectedFile?.file.name || ''}
          altText={form.getFieldValue('alt_text')}
          title={form.getFieldValue('title')}
          caption={form.getFieldValue('caption')}
          onMetaDescriptionSuggest={(suggestion) => {
            form.setFieldsValue({ meta_description: suggestion });
          }}
          onMetaKeywordsSuggest={(keywords) => {
            form.setFieldsValue({ meta_keywords: keywords });
          }}
        />
      )}

      <Form.Item
        label={
          <Space>
            <EditOutlined />
            Meta Description
            <Tooltip title="M√¥ t·∫£ chi ti·∫øt cho SEO, gi√∫p tƒÉng th·ª© h·∫°ng t√¨m ki·∫øm">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
          </Space>
        }
        name="meta_description"
      >
        <TextArea rows={2} placeholder="M√¥ t·∫£ chi ti·∫øt cho SEO" />
      </Form.Item>

      <Form.Item name="meta_keywords">
        <KeywordsInput
          label="Meta Keywords"
          tooltip="Nh·∫≠p t·ª´ kh√≥a SEO, ph√¢n c√°ch b·∫±ng d·∫•u ph·∫©y. V√≠ d·ª•: Laptop Asus ExpertBook B1, Gaming, Computer"
          placeholder="Nh·∫≠p t·ª´ kh√≥a, ph√¢n c√°ch b·∫±ng d·∫•u ph·∫©y"
          maxTags={15}
          allowDuplicates={false}
        />
      </Form.Item>

      {/* Credit and License */}
      <Form.Item
        label={
          <Space>
            <UserOutlined />
            Credit
            <Tooltip title="Ngu·ªìn g·ªëc ho·∫∑c ng∆∞·ªùi t·∫°o ra h√¨nh ·∫£nh (M·∫∑c ƒë·ªãnh: Original Content - T·ªëi ∆∞u SEO)">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
            <a
              href="/credit-license-guide.html#credit"
              target="_blank"
              style={{
                color: "#1890ff",
                textDecoration: "none",
                fontSize: "12px",
              }}
              title="Xem h∆∞·ªõng d·∫´n Credit"
            >
              üìñ H∆∞·ªõng d·∫´n
            </a>
          </Space>
        }
        name="credit"
        initialValue={mode === 'create' ? "Original Content" : undefined}
      >
        <Select
          placeholder="Original Content (M·∫∑c ƒë·ªãnh - T·ªëi ∆∞u SEO)"
          allowClear
          showSearch
          optionFilterProp="children"
        >
          <Option value="Unsplash">üÜì Unsplash</Option>
          <Option value="Pexels">üÜì Pexels</Option>
          <Option value="Pixabay">üÜì Pixabay</Option>
          <Option value="Freepik">üÜì Freepik</Option>
          <Option value="Wikimedia Commons">üÜì Wikimedia Commons</Option>
          <Option value="OpenClipart">üÜì OpenClipart</Option>
          <Option value="Flaticon">üÜì Flaticon</Option>
          <Option value="Adobe Stock">üí∞ Adobe Stock</Option>
          <Option value="Shutterstock">üí∞ Shutterstock</Option>
          <Option value="Getty Images">üí∞ Getty Images</Option>
          <Option value="iStock">üí∞ iStock</Option>
          <Option value="Depositphotos">üí∞ Depositphotos</Option>
          <Option value="Original Content">üé® Original Content</Option>
          <Option value="Self Created">üé® Self Created</Option>
          <Option value="Custom Design">üé® Custom Design</Option>
          <Option value="Custom">üìù Custom</Option>
        </Select>
      </Form.Item>

      <Form.Item
        label={
          <Space>
            <CopyrightOutlined />
            License
            <Tooltip title="Gi·∫•y ph√©p s·ª≠ d·ª•ng h√¨nh ·∫£nh, quan tr·ªçng cho b·∫£n quy·ªÅn (M·∫∑c ƒë·ªãnh: All Rights Reserved - B·∫£o l∆∞u m·ªçi quy·ªÅn)">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
            <a
              href="/credit-license-guide.html#license"
              target="_blank"
              style={{
                color: "#1890ff",
                textDecoration: "none",
                fontSize: "12px",
              }}
              title="Xem h∆∞·ªõng d·∫´n License"
            >
              üìñ H∆∞·ªõng d·∫´n
            </a>
          </Space>
        }
        name="license"
        initialValue={mode === 'create' ? "All Rights Reserved" : undefined}
      >
        <Select
          placeholder="All Rights Reserved (M·∫∑c ƒë·ªãnh - B·∫£o l∆∞u m·ªçi quy·ªÅn)"
          allowClear
          showSearch
          optionFilterProp="children"
        >
          {LICENSE_PRESETS.map((license) => (
            <Option key={license.value} value={license.value}>
              {license.label}
            </Option>
          ))}
        </Select>
      </Form.Item>

      {/* Status */}
      <Form.Item
        label={
          <Space>
            Tr·∫°ng th√°i
            <Tooltip title="B·∫≠t/t·∫Øt hi·ªÉn th·ªã h√¨nh ·∫£nh tr√™n website">
              <InfoCircleOutlined style={{ color: "#1890ff" }} />
            </Tooltip>
          </Space>
        }
        name="is_active"
        valuePropName="checked"
        initialValue={true}
      >
        <Switch checkedChildren="Hi·ªÉn th·ªã" unCheckedChildren="·∫®n" />
      </Form.Item>
    </>
  );
};
